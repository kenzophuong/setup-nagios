###############################################################################
# COMMANDS.CFG - SAMPLE COMMAND DEFINITIONS FOR NAGIOS 4.0.7
#
#
# NOTES: This config file provides you with some example command definitions
#    that you can reference in host, service, and contact definitions.
#
#    You don't need to keep commands in a separate file from your other
#    object definitions.  This has been done just to make things easier to
#    understand.
#
###############################################################################


################################################################################
#
# SAMPLE NOTIFICATION COMMANDS
#
# These are some example notification commands.  They may or may not work on
# your system without modification.  As an example, some systems will require
# you to use "/usr/bin/mailx" instead of "/usr/bin/mail" in the commands below.
#
################################################################################


# 'notify-host-by-email' command definition
define command {
    command_name    notify-host-by-email
    #command_line    /opt/sendmail.py $CONTACTEMAIL$ "** $NOTIFICATIONTYPE$ Host Alert: $HOSTALIAS$ is $HOSTSTATE$ **"
    command_line    /usr/local/nagios-herald/bin/nagios-herald --message-type email -r $CONTACTEMAIL$ --formatter=$_HOSTMESSAGE_FORMATTER_NAME$ --nagios-cgi-url=http://123.30.242.174/nagios/cgi-bin/cmd.cgi --reply-to=notify-sms@vccloud.vn
}


# 'notify-service-by-email' command definition
define command {
    command_name    notify-service-by-email
    #command_line    /opt/sendmail.py $CONTACTEMAIL$ "** $NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$ **"
    command_line    /usr/local/nagios-herald/bin/nagios-herald --message-type email -r $CONTACTEMAIL$ --formatter=$_SERVICEMESSAGE_FORMATTER_NAME$ --nagios-cgi-url=http://123.30.242.174/nagios/cgi-bin/cmd.cgi --reply-to=notify-sms@vccloud.vn
}

# 'notify-host-by-telegram' command definition
#define command {
#    command_name    notify-host-by-telegram
#    command_line    /opt/message_to_telegram.sh "$NOTIFICATIONTYPE$ Host Alert: $HOSTALIAS$ is $HOSTSTATE$: $HOSTOUTPUT$"
#}


# 'notify-service-by-telegram' command definition
#define command {
#    command_name    notify-service-by-telegram
#    command_line    /opt/message_to_telegram.sh "$NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$: $SERVICEOUTPUT$ $LONGSERVICEOUTPUT$"
#}

# 'notify-host-by-sms' command definition
#define command {
#    command_name    notify-host-by-sms
#    command_line    /opt/send_sms.py "$NOTIFICATIONTYPE$ Host Alert: $HOSTALIAS$ is $HOSTSTATE$: $HOSTOUTPUT$"
#}


# 'notify-service-by-sms' command definition
#define command {
#    command_name    notify-service-by-sms
#    command_line    /opt/send_sms.py "$NOTIFICATIONTYPE$ Service Alert: $HOSTALIAS$/$SERVICEDESC$ is $SERVICESTATE$: $SERVICEOUTPUT$"
#}


## 'notify-host-by-email' command definition
#define command {
#    command_name    notify-host-by-email
#    command_line    /usr/local/nagios/nans/collate-notifications.pl -t 'HOST' -e '$CONTACTEMAIL$'  -d '$LONGDATETIME$' -n '$NOTIFICATIONTYPE$' -I '$HOSTADDRESS$' -H '$HOSTNAME$' -h '$HOSTSTATE$' -o '$HOSTOUTPUT' -A '$HOSTNAME$' -a '$HOSTNAME$' -f '/usr/local/nagios/var/rw/nagios.log'
#}


## 'notify-service-by-email' command definition
#define command {
#    command_name    notify-service-by-email
#    command_line    /usr/local/nagios/nans/collate-notifications.pl -t 'SERVICE' -e '$CONTACTEMAIL$' -d '$LONGDATETIME$' -n '$NOTIFICATIONTYPE$' -I '$HOSTADDRESS$' -H '$HOSTNAME$' -S '$SERVICEDESC$' -s '$SERVICESTATE$' -o '$SERVICEOUTPUT$' -A '$HOSTNAME$' -a '$SERVICEDESC$' -f '/usr/local/nagios/var/rw/nagios.log'
#}


# 'notify-host-by-hipchat' command definition
#define command {
#    command_name    notify-host-by-hipchat
#    command_line    hipsaint --token=e2ca2f8429e1a21d7cdd734fdafb1e --room=383293 --type=short-host --inputs="$HOSTALIAS$|$LONGDATETIME$|$NOTIFICATIONTYPE$|$HOSTALIAS$|$HOSTSTATE$|$HOSTOUTPUT$" -n
#}


# 'notify-service-by-hipchat' command definition
#define command {
#    command_name    notify-service-by-hipchat
#    command_line    hipsaint --token=e2ca2f8429e1a21d7cdd734fdafb1e --room=383293 --type=short-service --inputs="$SERVICEDESC$|$HOSTALIAS$|$LONGDATETIME$|$NOTIFICATIONTYPE$|$HOSTALIAS$|$SERVICESTATE$|$SERVICEOUTPUT$" -n
#}


# 'notify-host-by-nagios-herald' command definition
#define command {
#       command_name    notify-host-by-email
#       command_line    /opt/nagios-herald/bin/nagios-herald --message-type email --formatter=$_HOSTMESSAGE_FORMATTER_NAME$ --nagios-cgi-url=http://192.168.2.82:8888/nagios/cgi-bin/cmd.cgi --reply-to=nagios@vccorp.vn --trace
#}


# 'notify-service-by-nagios-herald' command definition
#define command {
#    command_name    notify-service-by-email
#    command_line    /opt/nagios-herald/bin/nagios-herald --message-type email --formatter=$_SERVICEMESSAGE_FORMATTER_NAME$ --nagios-cgi-url=http://192.168.2.82:8888/nagios/cgi-bin/cmd.cgi --reply-to=nagios@vccorp.vn --trace
#}

################################################################################
#
# SAMPLE HOST CHECK COMMANDS
#
################################################################################


# This command checks to see if a host is "alive" by pinging it
# The check must result in a 100% packet loss or 5 second (5000ms) round trip
# average time to produce a critical error.
# Note: Five ICMP echo packets are sent (determined by the '-p 5' argument)

# 'check_ping_lan' command definition

{% for host in groups['ping_lan'] %}
    {% if ('to' in hostvars[host]) and ('from' in hostvars[host]) %}
        {% for dest in hostvars[host]['to'] %}
            {% if 'from' in hostvars[host] %}

define command {
    command_name    check_ping_{{ hostvars[host]['from'] }}_to_{{ dest }}
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_ping_{{ hostvars[host]['from'] }}_to_{{ dest }} -t 30
}

            {% endif %}
        {% endfor %}
    {% endif %}
{% endfor %}


# check_ping_wan
{% for wan in groups['ping_wan'] %}

define command {
    command_name    check_ping_wan_{{ wan | replace('.', '_') }}
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_ping_wan_{{ wan | replace('.', '_') }} -t 30
}

{% endfor %}


# check_ha_mysql
{% for ip in groups['ha_mysql'] %}

define command {
    command_name    check_ha_mysql_{{ ip | replace('.', '_') }}
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_ha_mysql_{{ ip | replace('.', '_') }}
}

{% endfor %}

# 'check-gdnsd' command definition
define command {
    command_name    check_gdnsd
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_gdnsd
}

# 'check-gdnsd' command definition
define command {
    command_name    check_bonding
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_bonding
}

# 'check-conntrack' command definition
define command {
    command_name    check_conntrack
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_conntrack
}

# 'check-services' command definition
define command {
    command_name    check_services
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_services
}

# 'check-ssh' command definition
define command {
    command_name    check_ssh
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_ssh
}

# 'check-loadbalancer' command definition
define command {
    command_name    check_loadbalancer
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_loadbalancer
}

# 'check-host-alive' command definition
define command {
    command_name    check-host-alive
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w 3000.0,80% -c 5000.0,100% -p 5
}

# 'check-port-change' command definition
#define command {
#    command_name    check_port_change
#    command_line    /usr/local/nagios/libexec/check_port_change.sh -H $HOSTADDRESS$
#}

# 'check-iptables' command definition
define command {
    command_name    check_iptables
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_iptables -t 30
}

# 'check-port-change' command definition
#define command {
#    command_name    check_syn_flood
#    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_syn_flood
#}

# 'check-video-workers' command definition
define command {
    command_name    check_video_workers
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_video_workers
}

# 'check_shellshock' command definition
define command {
    command_name    check_shellshock
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_shellshock
}

## 'check_mongodb_replicaset'
#define command {
#    command_name    check_mongodb_replicaset
#    command_line    $USER1$/check_mongodb.py -H $HOSTADDRESS$ -A $ARG1$ -P $ARG2$ -W $ARG3$ -C $ARG4$ -r $ARG5$
#}

# 'check_https' command definition
define command {
    command_name    check_https
    command_line    sh /usr/local/nagios/libexec/check_https.sh $ARG1$ $ARG2$ -t 300
}

# check ping dns google loss
define command {
    command_name    check_ping_dns_google
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_ping_dns_google -t 30
}


## check response time(msec) for memcached
#define command {
#    command_name    check_memcached_response
#    command_line    /usr/local/bin/check_memcached -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -t 30
#}
#
#
## check cache size ratio(bytes/limit_maxbytes[%]) for memcached
#define command {
#    command_name    check_memcached_size
#    command_line    /usr/local/bin/check_memcached -H $HOSTADDRESS$ --size-warning $ARG1$ --size-critical $ARG2$ -t 30
#}
#
#
## check cache hit ratio(get_hits/cmd_get[%]) for memcached
#define command {
#    command_name    check_memcached_hit
#    command_line    /usr/local/bin/check_memcached -H $HOSTADDRESS$ --hit-warning $ARG1$ --hit-critical $ARG2$ -t 30
#}


# 'check_mysql_replication' command definition
define command {
    command_name    check_mysql_replication
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_mysql_replication -t 30
}


# 'check_squid' command definition
define command {
    command_name    check_squid
    command_line    $USER1$/check_squid.pl --proxy=$HOSTADDRESS$ --proxyport=$ARG1$ --proxyuser=$ARG2$ --proxypass=$ARG3$ --url=$ARG4$ --status=$ARG5$ -t 30
}


# 'check_time_ping' command definition
define command {
    command_name    check_time_ping
    command_line    sh /usr/local/nagios/libexec/check_time_ping.sh $HOSTADDRESS$ $ARG1$ $ARG2$
}


# check_port80_active_connections
define command {
    command_name    check_port80_active_connections
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_port80_active_connections -t 30
}


# check_port8080_active_connections
define command {
    command_name    check_port8080_active_connections
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_port8080_active_connections -t 30
}


# 'check_uptime' command definition
define command {
    command_name    check_uptime
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_uptime -t 30
}


# 'check_readonly_mounts' command definition
define command {
    command_name    check_readonly_mounts
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_readonly_mounts -t 30
}


# 'check_mem' command definition
define command {
    command_name    check_mem
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_mem -t 30
}


# 'check_cpu' command definition
define command {
    command_name    check_cpu
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_cpu -t 30
}


# 'check_disk' command definition
define command {
    command_name    check_disk
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_disk -t 30
}


# 'check_traffic' command definition
define command {
    command_name    check_traffic
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_traffic -t 30
}


# 'check_bandwidth' command definition
define command {
    command_name    check_bandwidth
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_bandwidth -t60
}


# 'check_graphite_data' command definition
define command {
    command_name    check_graphite_data
    command_line    $USER1$/check_graphite_data -u $_SERVICEGRAPHURL$ -w $ARG1$ -c $ARG2$ -t 30
}


# 'check_ntp_time' command definition
define command {
    command_name    check_ntp_time
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_ntp_time -t 30
}


# 'check_swap_paging_rate' command definition
define command {
    command_name    check_swap_paging_rate
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_swap_paging_rate -t 30
}


# 'check_forkrate' command definition
define command {
    command_name    check_forkrate
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_forkrate -t 30
}


# 'check_open_fds' command definition
define command {
    command_name    check_open_fds
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_open_fds -t 30
}


# 'check_scan' command definition
define command {
    command_name    check_scan
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_scan -t 30
}


# 'check_mysql' command definition
define command {
    command_name    check_mysql
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_mysql -t 30
}


# 'check_connections' command definition
define command {
    command_name    check_connections
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_connections -t 30
}


# 'check_diskio' command definition
define command {
    command_name    check_diskio
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_diskio -t 30
}


# 'check_bad_login' command definition
define command {
    command_name    check_bad_login
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_bad_login -t 30
}


# 'check_diskstat' command definition
define command {
    command_name    check_diskstat
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_diskstat -t 30
}


# 'check_access_mongo' command definition
define command {
    command_name    check_access_mongo
    command_line    $USER1$/check_nrpe -H $HOSTADDRESS$ -c check_access_mongo -t 30
}

################################################################################
#
# SAMPLE SERVICE CHECK COMMANDS
#
# These are some example service check commands.  They may or may not work on
# your system, as they must be modified for your plugins.  See the HTML
# documentation on the plugins for examples of how to configure command definitions.
#
# NOTE:  The following 'check_local_...' functions are designed to monitor
#    various metrics on the host that Nagios is running on (i.e. this one).
################################################################################

# 'check_local_disk' command definition
define command {
    command_name    check_local_disk
    command_line    $USER1$/check_disk -w $ARG1$ -c $ARG2$ -p $ARG3$
}


# 'check_local_load' command definition
define command {
    command_name    check_local_load
    command_line    $USER1$/check_load -w $ARG1$ -c $ARG2$
}


# 'check_local_procs' command definition
define command {
    command_name    check_local_procs
    command_line    $USER1$/check_procs -w $ARG1$ -c $ARG2$ -s $ARG3$
}


# 'check_local_users' command definition
define command {
    command_name    check_local_users
    command_line    $USER1$/check_users -w $ARG1$ -c $ARG2$
}


# 'check_local_swap' command definition
define command {
    command_name    check_local_swap
    command_line    $USER1$/check_swap -w $ARG1$ -c $ARG2$
}


# 'check_local_mrtgtraf' command definition
define command {
    command_name    check_local_mrtgtraf
    command_line    $USER1$/check_mrtgtraf -F $ARG1$ -a $ARG2$ -w $ARG3$ -c $ARG4$ -e $ARG5$
}


################################################################################
# NOTE:  The following 'check_...' commands are used to monitor services on
#    both local and remote hosts.
################################################################################

# 'check_ftp' command definition
define command {
    command_name    check_ftp
    command_line    $USER1$/check_ftp -H $HOSTADDRESS$ $ARG1$
}


# 'check_hpjd' command definition
define command {
    command_name    check_hpjd
    command_line    $USER1$/check_hpjd -H $HOSTADDRESS$ $ARG1$
}


# 'check_snmp' command definition
define command {
    command_name    check_snmp
    command_line    $USER1$/check_snmp -H $HOSTADDRESS$ $ARG1$
}


# 'check_http' command definition
define command {
    command_name    check_http
    command_line    $USER1$/check_http -H $ARG1$ -I $ARG2$ -u $ARG3$ -w 1 -c 2
}


# 'check_http with domain' command definition
define command {
    command_name    check_http_domain
    command_line    $USER1$/check_http -H $ARG1$ -u $ARG3$
}

## 'check_ssh' command definition
#define command {
#    command_name    check_ssh
#    command_line    $USER1$/check_ssh $ARG1$ $HOSTADDRESS$
#}


# 'check_dhcp' command definition
define command {
    command_name    check_dhcp
    command_line    $USER1$/check_dhcp $ARG1$
}


# 'check_ping' command definition
define command {
    command_name    check_ping
    command_line    $USER1$/check_ping -H $HOSTADDRESS$ -w $ARG1$ -c $ARG2$ -p 5
}


# 'check_pop' command definition
define command {
    command_name    check_pop
    command_line    $USER1$/check_pop -H $HOSTADDRESS$ $ARG1$
}


# 'check_imap' command definition
define command {
    command_name    check_imap
    command_line    $USER1$/check_imap -H $HOSTADDRESS$ $ARG1$
}


# 'check_smtp' command definition
define command {
    command_name    check_smtp
    command_line    $USER1$/check_smtp -H $HOSTADDRESS$ $ARG1$
}


# 'check_tcp' command definition
define command {
    command_name    check_tcp
    command_line    $USER1$/check_tcp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$ -t 30
}


# 'check_udp' command definition
define command {
    command_name    check_udp
    command_line    $USER1$/check_udp -H $HOSTADDRESS$ -p $ARG1$ $ARG2$
}


# 'check_nt' command definition
define command {
    command_name    check_nt
    command_line    $USER1$/check_nt -H $HOSTADDRESS$ -p 12489 -v $ARG1$ $ARG2$
}

################################################################################
#
# SAMPLE PERFORMANCE DATA COMMANDS
#
# These are sample performance data commands that can be used to send performance
# data output to two text files (one for hosts, another for services).  If you
# plan on simply writing performance data out to a file, consider using the
# host_perfdata_file and service_perfdata_file options in the main config file.
#
################################################################################


# 'process-host-perfdata' command definition
define command {
    command_name    process-host-perfdata
    command_line    /usr/bin/printf "%b" "$LASTHOSTCHECK$\t$HOSTNAME$\t$HOSTSTATE$\t$HOSTATTEMPT$\t$HOSTSTATETYPE$\t$HOSTEXECUTIONTIME$\t$HOSTOUTPUT$\t$HOSTPERFDATA$\n" >> /usr/local/nagios/var/host-perfdata.out
}


# 'process-service-perfdata' command definition
define command {
    command_name    process-service-perfdata
    command_line    /usr/bin/printf "%b" "$LASTSERVICECHECK$\t$HOSTNAME$\t$SERVICEDESC$\t$SERVICESTATE$\t$SERVICEATTEMPT$\t$SERVICESTATETYPE$\t$SERVICEEXECUTIONTIME$\t$SERVICELATENCY$\t$SERVICEOUTPUT$\t$SERVICEPERFDATA$\n" >> /usr/local/nagios/var/service-perfdata.out
}
